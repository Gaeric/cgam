#+title: Ray Tracing Gems CN
#+startup: content
#+author: Gaeric
#+HTML_HEAD: <link href="./worg.css" rel="stylesheet" type="text/css">
#+HTML_HEAD: <link href="/static/css/worg.css" rel="stylesheet" type="text/css">
#+OPTIONS: ^:{}
* Part1
** Chapter3 光线生成
*** 3.1 介绍
    我们展示的射线生成投影可以用作相机的主要射线（也称为视图或眼睛射线），以及用于光探针计算和光子发射。这些投影中的许多之前没有以方便的、可插入的射线生成形式提供，而是作为图像空间变换或光栅化管道顶点程序发布。我们讨论以下关键投影：

    - 针孔（透视）：标准/直线/平面透视投影。
    - 薄透镜：高斯透镜模型，用于产生相机内的景深效果。
    - 广义帕尼尼：对于超宽显示器比针孔效果更佳。
    - 鱼眼：用于针孔投影的传统宽视场。
    - 镜头阵列：光场板参数化；鱼眼网格。
    - 八面体：适用于反射探针。
    - 立方体映射：包括纹素到射线和射线到纹素的转换。
    - 正交（平行）：适用于科学和工程可视化。
    - 斐波那契均匀球体：适合环境光遮蔽和辐射传递。

    对于每一种投影，我们提供着色器代码、一张显示投影应用于3D场景的图像，以及有关投影何时有用的讨论。我们还包括用于使用Halton序列进行超采样的子像素偏移代码。我们首先讨论共享的相机到世界的变换，并展示光线生成模型和参数的图示。我们将本章的所有代码发布到公共领域，以便可以不受限制地使用。
*** 3.2 相机光线
**** 3.2.1 相机空间
     为了简化问题，我们将光线的起始空间称为数学相机空间，并假定图像平面存在于观察者的位置。实际上可能并不存在真实意义上的相机——例如，在渲染光探头时。本章中的着色器在相机空间中生成光线，采用以下约定：x̂ 代表向右，ŷ 代表向上，ẑ 代表朝向观察者。因为光线追踪的加速结构通常是在世界空间中构建的，所以这些光线必须从相机空间转换到世界空间以进行追踪。我们在此提供这个常见的转换代码，并在本章的其余单独光线生成着色器中省略。

     我们将距离与 vec3 类型交错存储，因为在处理大量光线或存储在缓冲区中的光线时，这种方式可以在内存中实现更好的4向量对齐。

     相机的方向可以通过多种方式进行参数化，但我们总是假设相机的轴是正交归一的；相机本身没有被以某种方式扭曲或拉伸。

     当相机的方向（即从相机到世界的变换）由一个 mat3x3 旋转矩阵 cameraRotation（其列是相机空间的轴）和一个 vec3 投影中心 cameraTranslation 描述时，从相机到世界的变换是：
